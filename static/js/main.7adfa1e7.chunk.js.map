{"version":3,"sources":["components/navigation.jsx","components/home.jsx","components/teams.jsx","components/games.jsx","components/Singlegame.jsx","components/jiwecoms.jsx","components/addgame.jsx","components/tags.jsx","components/search.jsx","components/gamessearch.jsx","components/comments.jsx","App.js","reportWebVitals.js","index.js"],"names":["withRouter","props","className","Navbar","bg","expand","Container","Brand","href","Toggle","Collapse","id","Nav","Link","client","ApolloClient","uri","headers","Home","style","height","borderBottomLeftRadius","borderBottomRightRadius","class","borderRadius","src","alt","width","TeamLists","TEAMS_QUERY","gql","useQuery","loading","data","error","Spinner","animation","size","Row","Image","fluid","rounded","users","map","name","bio","avatar","maxheight","top","Teammen","Gamess","Carousel","variant","Item","Caption","GAMES_DETAILS","GameDetails","variables","game","title","genre","description","created_at","GameList","USERS_QUERY","COMMENTS","useState","GameId","setGameId","games","game_comments","Card","Img","Body","Title","Text","onclick","CREATE_GAME","GameForm","show","setShow","setTitle","setGenre","setDescription","useMutation","refetchQueries","insert_games","console","log","Toast","onClose","delay","autohide","Header","roundedCircle","Form","Control","required","type","placeholder","onChange","e","target","value","as","rows","onClick","TagList","TAG_QUERY","tags","Tagsli","Search","inputVal","onSearch","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7adfa1e7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Link, withRouter} from \"react-router-dom\";\r\n  import { Nav,Navbar,Container} from 'react-bootstrap';\r\n \r\nimport { Alert,\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardImg,\r\n  CardBody,\r\n  CardFooter,\r\n   Col,\r\n  Button,Breadcrumb, BreadcrumbItem } from \"shards-react\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"shards-ui/dist/css/shards.min.css\";\r\nimport {Tagsli } from \"../components\";\r\n\r\n\r\nfunction Navi(props){\r\n\treturn(\r\n\r\n<div className=\"navigation\">\r\n\r\n     <Navbar bg=\"light\" expand=\"lg\">\r\n  <Container>\r\n    <Navbar.Brand href=\"#home\">Jiwe Interview-wahomemutahi</Navbar.Brand>\r\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n      <Nav className=\"me-auto\">\r\n        <Nav.Link href=\"/\">Home</Nav.Link>\r\n        <Nav.Link href=\"/teams\">Teams</Nav.Link>\r\n       <Nav.Link href=\"/games\">Games</Nav.Link>\r\n        <Nav.Link href=\"/tags\">Categories</Nav.Link>\r\n      </Nav>\r\n    </Navbar.Collapse>\r\n  </Container>\r\n</Navbar>\r\n\r\n\r\n\r\n    </div>\r\n\r\n\r\n\r\n\r\n\t\t);\r\n}\r\nexport default withRouter(Navi);","import React from \"react\";\r\nimport {Games} from \"../components\";\r\nimport ReactDOM from 'react-dom';\r\nimport  { GameList,Navi,GameForm,Tagsli } from \"../components\";\r\nimport ApolloClient from 'apollo-boost';\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\nconst client = new ApolloClient({\r\n  uri: 'https://jiwe-demo.herokuapp.com/v1/graphql',\r\n headers: {\"content-Type\": \"application/json\",\r\n'x-hasura-admin-secret': 'jiwe-interview'},\r\n});\r\n\r\nfunction Home(){\r\n\treturn(\r\n\r\n<div className=\"container-fluid\">\r\n\r\n<div className=\"home row\">\r\n\r\n <ApolloProvider client={client}>\r\n<div className=\"container-fluid bg-light\"  style={{height:\"320px\", borderBottomLeftRadius: \"20px\", borderBottomRightRadius: \"20px\"}}>\r\n<div className=\"row pt-2\">\r\n<div className=\"col-md-12 col-12 col-sm-12\">\r\n  <h4 className=\"text-center pt-4 font-weight-bold text-uppercase\">Whats more fun than playing games 😍 is bringing them to life</h4> \r\n    \r\n    <div className=\"row\"> <small className=\"pl-2 pt-2 pr-2 text-center\">\r\n              I always wonder! wy not just jump up to the moon and back! then i realize im not a rocket! eyah i know that was a dry joke !lol .\r\n            </small></div>\r\n            <div className=\"pt-1 pb-2 border-bottom\"></div>\r\n</div>\r\n</div>\r\n\r\n\r\n<span className=\"badge badge-dark\">Categories</span>\r\n\r\n<Tagsli />\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n</ApolloProvider> \r\n <div id=\"root\" className=\"pb-2\"></div>\r\n\r\n<div className=\"pl-2 pr-2 pb-2\">\r\n<h4 className=\"text-right font-weight-bold text-uppercase \">Stay in the loop 😎</h4>\r\n      <div class=\"container-fluid card bg-dark\" style={{borderRadius: \"20px\"}}>\r\n        <div class=\"row align-items-center my-5\">\r\n          <div class=\"col-md-7 col-12 col-sm-12\">\r\n            <img\r\n              class=\"img-fluid rounded mb-4 mb-lg-0\"\r\n              src=\"https://jiwe.studio/assets/images/usoni_prophecy.png?v=7b5663fd1f\"\r\n              alt=\"\"\r\n              style={{height:\"500px\", width:\"100%\"}}\r\n            />\r\n          </div>\r\n          \r\n          <div class=\"col-md-5  col-12 col-sm-12 \">\r\n          <div className=\"text-white  pl-2 pr-2 pt-2 pb-2\">\r\n            <h1 class=\"font-weight-bold text-white text-center\">USONI PART 2: THE PROPHECY</h1>\r\n           \r\n            <small className=\"text-center\">\r\n              After the shipwreck which separated her from Ulysse, Ophelia lands on one of Lampedusa shores. Is Ophelia going to be sent back to the Hell she thought she had escaped from?\r\n\r\n\r\n            </small>\r\n            <h5 className=\"text-right font-weight-bold\">Coming Soon!.</h5>\r\n          </div>\r\n          </div>\r\n\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n <ApolloProvider client={client}>\r\n <h5 className=\"font-weight-bold text-right\">Games</h5>\r\n<GameList />\r\n </ApolloProvider>\r\n</div>\r\n\r\n\r\n\r\n\r\n\t\t);\r\n}\r\nexport default Home;","import React, { useState } from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { gql } from 'apollo-boost';\r\nimport { Alert,\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardImg,\r\n  CardBody,\r\n  CardFooter,\r\n   Container, Col,\r\n  Button,Breadcrumb, BreadcrumbItem } from \"shards-react\";\r\nimport { Nav,Navbar } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"shards-ui/dist/css/shards.min.css\";\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\nimport ApolloClient from 'apollo-boost';\r\nimport  { GameList,Navi } from \"../components\";\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Image from 'react-bootstrap/Image';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nconst client = new ApolloClient({\r\n  uri: 'https://jiwe-demo.herokuapp.com/v1/graphql',\r\n headers: {\"content-Type\": \"application/json\",\r\n'x-hasura-admin-secret': 'jiwe-interview'},\r\n});\r\n\r\n\r\nconst TeamLists =() =>{\r\n  const TEAMS_QUERY = gql`\r\n{\r\n  users {\r\n    id\r\n    name\r\n    bio\r\n    avatar\r\n  }\r\n}\r\n`;\r\n\r\n  const{ loading,error,data } = useQuery(TEAMS_QUERY);\r\n  if(loading) return<div className=\"row pt-5 pl-5 justify-content-center\"> <Spinner animation=\"grow\" size=\"sm\" />\r\n  <Spinner animation=\"grow\" /></div>;\r\n\r\n\r\n  return   <div class=\"pl-2 pt-3\">\r\n  <Row className=\"justify-content-center\">\r\n  <h2 className=\"font-weight-bold border-rght text-center\">The Team</h2>\r\n  <div className=\"border-bottom\"></div>\r\n</Row>\r\n<Image style={{width:\"100%\", height:\"250px\"}} src=\"https://jiwe.io/static/media/logo-black.6ae66a8c.png\" fluid rounded />\r\n  <div className=\"border-bottom\"></div>\r\n\r\n<div className=\"row\">\r\n    {data.users.map(({id,name,bio,avatar}) => <div className=\"col-md-3 col-12 col-sm-12\">\r\n  <div className=\"pb-2 pr-2 pl-2\">\r\n  \r\n  <div className=\"card\"  style={{ maxheight: \"300px\" }}> \r\n  <CardBody key= {id}>\r\n  \r\n    <CardImg rounded top src={avatar} style={{height:\"300px\"}}/><p className=\"font-weight-bold\">{name}</p> \r\n    <div className=\"border-bottom\"></div><p className=\"float-right \">{bio}</p>\r\n</CardBody>\r\n\r\n</div>\r\n</div>\r\n</div>)}\r\n\r\n\r\n  </div></div>;\r\n}\r\n\r\nfunction Teammen(){\r\n\r\n\r\n  return(\r\n\r\n\r\n    <ApolloProvider client={client}>\r\n\r\n<TeamLists />\r\n\r\n</ApolloProvider>\r\n  )\r\n}\r\n\r\n\r\nexport default Teammen;","import React, { useState } from \"react\";\r\nimport {Games} from \"../components\";\r\nimport ReactDOM from 'react-dom';\r\nimport  { GameList,Navi,GameForm,Tagsli,Search,Comments } from \"../components\";\r\nimport ApolloClient from 'apollo-boost';\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport { Alert,\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardImg,\r\n  CardBody,\r\n  CardFooter,\r\n   Container, Col,\r\n  Button,Breadcrumb, BreadcrumbItem } from \"shards-react\";\r\nconst client = new ApolloClient({\r\n  uri: 'https://jiwe-demo.herokuapp.com/v1/graphql',\r\n headers: {\"content-Type\": \"application/json\",\r\n'x-hasura-admin-secret': 'jiwe-interview'},\r\n});\r\n\r\n\r\nfunction Gamess(){\r\n\r\n\r\n  return(\r\n\r\n\r\n    <ApolloProvider client={client}>\r\n\r\n\r\n<div className=\"bg-dark pb-5\" style={{borderBottomLeftRadius:\"30px\", borderBottomRightRadius:\"30px\"}}>\r\n<Carousel variant=\"dark\">\r\n  <Carousel.Item>\r\n    <img\r\n      className=\"d-block w-100\"\r\n      src=\"https://www.cnet.com/a/img/qJS3Wbnpz2kcq_7UAw_YwtqB_Cc=/756x425/2021/06/09/c18b929c-c84e-4dfe-ab38-9ffc6d2845fc/screen-shot-2021-06-09-at-11-21-26-am.png\" alt=\"First slide\"\r\n    />\r\n    <Carousel.Caption>\r\n     <h5 className=\"text-white text-uppercase font-weight-bold\">Some game i dont know the name</h5>\r\n      <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n    </Carousel.Caption>\r\n  </Carousel.Item>\r\n  <Carousel.Item>\r\n    <img\r\n      className=\"d-block w-100\"\r\n      src=\"https://www.cnet.com/a/img/c4-_xvW4jVPiMueilW5eHgqvFyk=/756x425/2021/01/03/60ad9fc2-dff4-4174-bb00-929706e241b1/deathloop.jpg\"\r\n      alt=\"Second slide\"\r\n    />\r\n    <Carousel.Caption>\r\n       <h5 className=\"text-white text-uppercase font-weight-bold\">Another one I dont know</h5>\r\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n    </Carousel.Caption>\r\n  </Carousel.Item>\r\n  <Carousel.Item>\r\n    <img\r\n      className=\"d-block w-100\"\r\n      src=\"https://www.cnet.com/a/img/kUUQE9l3CgBRlqz-5wxgC2J0aCo=/756x425/2021/06/13/ea00e2ac-5185-47cc-abba-c5ba8661de52/guardians-of-the-galaxy-new-cropped-hed-1272098-1280x0.jpg\"\r\n      alt=\"Third slide\"\r\n    />\r\n    <Carousel.Caption>\r\n      <h5 className=\"text-white text-uppercase font-weight-bold\">Guardians Of The Galaxy</h5>\r\n      <p className=\"text-white font-weight-bold text-capitalize\">Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\r\n    </Carousel.Caption>\r\n  </Carousel.Item>\r\n</Carousel></div>\r\n<div className=\"container-fluid\">\r\n<div className=\"row pt-2 pl-2 pr-2\">\r\n<Search />\r\n</div>\r\n</div>\r\n<div className=\"container-fluid\">\r\n<div className=\"row justify-content-center\">\r\n<span className=\"font-weight-bold text-grey\">Hot Right now<div className=\"border-bottom\"></div></span>\r\n\r\n<Tagsli />\r\n</div>\r\n</div>\r\n\r\n\r\n<div className=\"container-fluid\">\r\n<div className=\"row\">\r\n<div className=\"col-md-3 col -12 col-sm-12\">\r\n<div className=\"pt-2 pl-2 pr-2\">\r\n<div className=\"card pt-2 pl-2 pr-2 pb-2\">\r\n <CardHeader >Submit a Game</CardHeader>\r\n<div className=\"pt-2\"></div>\r\n<GameForm />\r\n</div>\r\n</div>\r\n</div>\r\n\r\n<div className=\"col-md-9 col-12 col-sm-12 \">\r\n<GameList />\r\n\r\n</div>\r\n</div>\r\n</div>\r\n</ApolloProvider>\r\n  )\r\n}\r\n\r\nexport default Gamess;","import React from 'react';\r\nimport { gql } from 'apollo-boost';\r\nimport { useQuery, useMutation } from '@apollo/react-hooks';\r\n\r\nconst GAMES_DETAILS= gql`\r\nquery GetGames($id: String!){\r\n  games(id: $id) {\r\n    id\r\n    created_at\r\n    description\r\n    genre\r\n    title\r\n  }\r\n}`;\r\n\r\n \r\nconst GameDetails = ({ id }) => {\r\n\tconst { data } = useQuery(GAMES_DETAILS, {variables: {id}});\r\n\t\r\n\tif(data && data.game){\r\n\t\tconst {game: {title, genre, description, created_at}} = data;\r\n\t\treturn <div className=\"card\">\r\n\t\t<h2>Details></h2>\r\n\t\t<p>Title: {title}</p>\r\n\t\t<p>Genre: {genre}</p>\r\n\t\t<p>Description: {description}</p>\r\n\t\t</div>;\r\n\r\n\t}\r\n\r\nreturn null;\r\n\r\n}\r\nexport default GameDetails;","import React, { useState } from 'react';\r\nimport { useQuery, useMutation } from '@apollo/react-hooks';\r\nimport { gql } from 'apollo-boost';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { Alert,\r\n \r\n  CardHeader,\r\n  CardTitle,\r\n  CardImg,\r\n  CardBody,\r\n  CardFooter,\r\n   Container, Row, Col,\r\n  Button,Breadcrumb, BreadcrumbItem } from \"shards-react\";\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\nimport ApolloClient from 'apollo-boost';\r\nimport GameDetails from \"./Singlegame\";\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport { Comments } from \"../components\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst GameList = ()=> {\r\n\r\n  const USERS_QUERY = gql`query getgames{\r\n  games {\r\n    id\r\n    genre\r\n    title\r\n    description\r\n    game_comments {\r\n      comment {\r\n        content\r\n        created_at\r\n      }\r\n      id\r\n    }\r\n  }\r\n}`;\r\n\r\nconst COMMENTS= gql`{\r\n  comments {\r\n    id\r\n    content\r\n    author_id\r\n    game_comments {\r\n      comment_id\r\n      created_at\r\n    }\r\n  }\r\n}`;\r\n\r\n\r\n  const { loading, error, data } = useQuery(USERS_QUERY,COMMENTS);\r\n \r\n  const [GameId, setGameId] = useState(null);\r\n  \r\n  if (loading) return <div className=\"row pt-5 pl-5 justify-content-center\"> <Spinner animation=\"grow\" size=\"sm\" />\r\n  <Spinner animation=\"grow\" /></div>;\r\n\r\n\r\n\r\n  return<div className=\"row pt-2\">\r\n \r\n{data.games.map(({ id, title, description,genre,game_comments })=> <div className=\"col-md-3 col-12 col-sm-12\" key={id}>\r\n<div className=\"pr-2 pl-2 pb-2\">\r\n<Card>\r\n  <Card.Img variant=\"top\" src=\"https://jiwe.io/static/media/logo-black.6ae66a8c.png\" />\r\n  <Card.Body>\r\n    <Card.Title >{title}</Card.Title>\r\n<div className=\"border-bottom\"></div>\r\n<Card.Text>\r\n\r\n{description}\r\n    </Card.Text>\r\n    <Button  onclick={() => setGameId(id)}   className=\"btn btn-dark\">{genre}</Button>\r\n  </Card.Body>\r\n</Card>\r\n</div>\r\n</div>)}\r\n      {GameId && <GameDetails id={GameId}></GameDetails>}\r\n     \r\n     </div>\r\n    ;\r\n}\r\n\r\n\r\n\r\nexport default GameList;","import React, { useState } from \"react\";\r\nimport { gql } from 'apollo-boost';\r\nimport { useQuery, useMutation } from '@apollo/react-hooks';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Toast from 'react-bootstrap/Toast';\r\n\r\n\r\nimport { Alert,\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardImg,\r\n  CardBody,\r\n  CardFooter,\r\n   Container, Row, Col,\r\n  Button,Breadcrumb, BreadcrumbItem } from \"shards-react\";\r\n\r\n\r\nconst CREATE_GAME = gql`\r\n\r\n\tmutation insert_games($title:String!, $genre:String! $description:String!) {\r\n  insert_games(objects: {title: $title,genre:$genre,description:$description}) {\r\n    returning {\r\n      id\r\n      language\r\n      title\r\n      updated_at\r\n      genre\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\n\r\n\r\nconst GameForm = () =>{\r\n\tconst [show, setShow] = useState(false);\r\n\tconst [title, setTitle] = useState('');\r\n\tconst [genre, setGenre] = useState('');\r\n\tconst [description, setDescription] = useState('');\r\n\r\n\tconst [insert_games, {error}] = useMutation(CREATE_GAME, {variables: {title, genre,description}, refetchQueries: [\"Gamess\"]} );\r\n if(error){\r\n \tconsole.log('error', error);\r\n }\r\n function _refreshPage(){\r\n        \r\n        window.location.reload();\r\n      \r\n    };\r\n\r\nreturn <div>\r\n<Toast onClose={() => setShow(false)} show={show} delay={3000} autohide>\r\n          <Toast.Header>\r\n            <img\r\n              src=\"https://jiwe.io/static/media/logo-black.6ae66a8c.png\"\r\n              className=\"rounded me-2\"\r\n              alt=\"\"\r\n             style={{height:\"30px\"}}\r\n              roundedCircle\r\n            />\r\n            <strong className=\"me-auto\">jiwebot</strong>\r\n            <small>just now</small>\r\n          </Toast.Header>\r\n          <Toast.Body>Woohoo, you just added a new game!</Toast.Body>\r\n        </Toast>\r\n    \r\n \r\n <Form.Control required  type=\"text\" placeholder=\"enter Title\" onChange={e => setTitle(e.target.value)} />\r\n\r\n<br />\r\n <Form.Control required  type=\"text\" placeholder=\"enter game genre\" onChange={e => setGenre(e.target.value)} />\r\n<br />\r\n<Form.Control required  as=\"textarea\" placeholder=\"enter game description\" onChange={e => setDescription(e.target.value)}  rows={3} />\r\n\r\n<br />\r\n\r\n<button style={{width:\"170px\"}}  size=\"sm\" className=\"float-right btn btn-dark\" onClick={() =>{ insert_games(); setShow(true);}}> add game</button>\r\n\r\n</div>\r\n}\r\n\r\nexport default GameForm;","import React, { useState } from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { gql } from 'apollo-boost';\r\nimport { Alert,\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardImg,\r\n  CardBody,\r\n  CardFooter,\r\n   Container, Col,\r\n  Button,Breadcrumb, BreadcrumbItem } from \"shards-react\";\r\nimport { Nav,Navbar } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"shards-ui/dist/css/shards.min.css\";\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\nimport ApolloClient from 'apollo-boost';\r\nimport  { GameList,Navi } from \"../components\";\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Image from 'react-bootstrap/Image';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nconst client = new ApolloClient({\r\n  uri: 'https://jiwe-demo.herokuapp.com/v1/graphql',\r\n headers: {\"content-Type\": \"application/json\",\r\n'x-hasura-admin-secret': 'jiwe-interview'},\r\n});\r\n\r\n\r\nconst TagList=()=>{\r\n\r\n\tconst TAG_QUERY = gql`\r\n\t\t {\r\n  tags(limit: 3) {\r\n  \tid\r\n    name\r\n  }\r\n}\r\n\t`;\r\n\r\n\r\nconst{ loading, error, data } = useQuery(TAG_QUERY);\r\nif(loading) return <div className=\"row pt-5 pl-5 justify-content-center\"> <Spinner animation=\"grow\" size=\"sm\" />\r\n  <Spinner animation=\"grow\" /></div>;\r\n\r\nreturn  <div className=\"row pt-2  pl-1 pb-2\">\r\n{data.tags.map(({id,name}) =><div class=\"col-md-4 col-4 col-sm-4\">\r\n<div className=\"card bg-light shadow-lg  pt-2 pb-2\" key={id} style={{height:\"80%\" }}>\r\n<small className=\"pt-3 pb-4  text-center pr-1 pl-1 font-weight-bold \"> {name}</small>\r\n</div>\r\n</div>)}\r\n\r\n</div>;\r\n\r\n\r\n}\r\n\r\nfunction Tagsli(){\r\n\treturn(\r\n<ApolloProvider client={client}>\r\n\r\n<TagList />\r\n\r\n</ApolloProvider>\r\n\r\n\t\t)\r\n}\r\nexport default Tagsli;","import React, { useState } from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport  { GameList,Navi,GameForm,Tagsli } from \"../components\";\r\nimport ApolloClient from 'apollo-boost';\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Alert,\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardImg,\r\n  CardBody,\r\n  CardFooter,\r\n   Container, Col,\r\n  Button,Breadcrumb, BreadcrumbItem } from \"shards-react\";\r\nconst client = new ApolloClient({\r\n  uri: 'https://jiwe-demo.herokuapp.com/v1/graphql',\r\n headers: {\"content-Type\": \"application/json\",\r\n'x-hasura-admin-secret': 'jiwe-interview'},\r\n});\r\n\r\n\r\n\r\nconst Search=({ inputVal, onChange, onSearch })=>{\r\n  return(<>\r\n    <div className=\"col-md-8 col-8 col-sm-8\">\r\n<Form.Control value={inputVal} onChange={onChange} placeholder=\"JIWE GAME SEARCH\" />\r\n</div>\r\n<div className=\"col-md-4 col-4 col-sm-4\">\r\n<button onClick={onSearch} className=\"btn btn-dark\">search</button>\r\n</div>\r\n</>\r\n    );\r\n};\r\nexport default Search;","import React, { useState } from \"react\";\r\nimport {GameList,Search }  from \"../components\";\r\nimport { useLazyQuery, gql } from \"@apollo/client\";\r\n\r\nconst SEARCH = gql`\r\n\tquery Search($match: String) {\r\n  games(order_by: {title: asc}, where: {title: {_ilike: $match}}) {\r\n    id\r\n    title\r\n    genre\r\n  }\r\n}\r\n\r\n`;\r\n\r\n\r\nconst GameSearch=()=>{\r\n\tconst [inputVal,setInputVal ] = useState(\"\");\r\n\tconst [search, {loading, error, data }] = useLazyQuery(SEARCH);\r\n\r\nreturn(\r\n<div>\r\n\r\n<Search \r\ninputVal={inputVal}\r\nonChange={(e) => setInputVal(e.target.value)}\r\nonSearch={() => search({ variables: {match: `%{inputVal}%`}})}\r\n/>\r\n<GameList  newGames={ data ? data.games : null } />\r\n\r\n</div>\r\n\t)\r\n\r\n}\r\nexport default GameSearch;","import React, { useState } from 'react';\r\nimport { useQuery, useMutation } from '@apollo/react-hooks';\r\nimport { gql } from 'apollo-boost';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { Alert,\r\n \r\n  CardHeader,\r\n  CardTitle,\r\n  CardImg,\r\n  CardBody,\r\n  CardFooter,\r\n   Container, Row, Col,\r\n  Button,Breadcrumb, BreadcrumbItem } from \"shards-react\";\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\nimport ApolloClient from 'apollo-boost';\r\nimport GameDetails from \"./Singlegame\";\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\n\r\nconst COMMENTS= gql`{\r\n  comments {\r\n    content\r\n    author_id\r\n    game_comments {\r\n      comment_id\r\n      created_at\r\n    }\r\n  }\r\n}`;\r\n\r\nfunction Comments(){\r\n  const { loading, error, data } = useQuery(COMMENTS);\r\n  \r\n \r\n  \r\n  if (loading) return <div className=\"row pt-5 pl-5 justify-content-center\"> <Spinner animation=\"grow\" size=\"sm\" />\r\n  <Spinner animation=\"grow\" /></div>;\r\n\r\n\r\n  return <div>{data.comments.map(({ id, content, author_id })=> <div className=\"col-md-3 col-12 col-sm-12\" key={id}><div className=\"col-md-4 col-4 \">{ content }</div><div className=\"col-md-4 col-4 \">{ author_id }</div><div className=\"border-bottom\"></div></div>)};</div>\r\n}\r\n\r\nexport default Comments;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Navi,Home,Teams,Games,Tagsli } from \"./components\";\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks';\n\nconst client = new ApolloClient({\n  uri: 'https://jiwe-demo.herokuapp.com/v1/graphql'\n\n});\n\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <Router>\n        <Navi />\n        <Switch>\n          <Route path=\"/\" exact component={() => <Home />} />\n          <Route path=\"/teams\" exact component={() => <Teams />} />\n          <Route path=\"/games\" exact component={() => <Games/>} />\n          <Route path=\"/tags\" exact component={() => <Tagsli/>} />\n           \n          \n          \n         \n        </Switch>\n      </Router>\n    </div>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}